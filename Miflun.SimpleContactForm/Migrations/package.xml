<?xml version="1.0" encoding="utf-8"?>
<umbPackage>
  <info>
    <package>
      <name>Simple Contact Form With Macro</name>
    </package>
  </info>
  <DocumentTypes />
  <MediaTypes />
  <Templates />
  <Stylesheets />
  <Scripts />
  <PartialViews>
    <View path="ContactForm\Index.cshtml">
      <![CDATA[@using Miflun.SimpleContactForm.Controllers;
@model Miflun.SimpleContactForm.Models.ContactFormModel;

@{
    bool isFormSubmitted = Convert.ToBoolean(TempData["IsEmailSent"]);
    bool isError = Convert.ToBoolean(TempData["IsError"]);
}

@using (Html.BeginUmbracoForm<ContactFormController>(nameof(ContactFormController.Submit), null, new { @id = "contactform", @class = "law-cform form-style-2" }, FormMethod.Post))
{
    <div class="row">
        <div class="col-sm-12 px-2">
            <h4 class="form-title text-center">
                Contact Us
            </h4>
        </div>
        @if (isError)
        {
            <div class="col-sm-12 px-2">
                <div class="text-center">
                    <p class="alert-danger">An error occured, please try again or call our number.</p>
                </div>
            </div>
        }
        @if (!isFormSubmitted)
        {
            <div class="col-sm-12 px-2">
                <div class="contact-field">
                    @Html.TextBoxFor(x => x.Name, new { placeholder = "Name", required = true })
                </div>
            </div>
            <div class="col-sm-12 px-2">
                <div class="contact-field">
                    @Html.TextBoxFor(x => x.Email, new { placeholder = "Email", required = true })
                </div>
            </div>
            <div class="col-sm-12 px-2">
                <div class="contact-field">
                    @Html.TextBoxFor(x => x.Phone, new { placeholder = "Phone", required = true })
                </div>
            </div>
            <div class="col-sm-12 px-2">
                <div class="contact-field mb-0">
                    @Html.TextAreaFor(x => Model.Message, new { placeholder = "Message...", rows = "3", required = true })
                </div>
            </div>
            <mif-captcha />
            @Html.HiddenFor(x => x.EmailToAddress)
            @Html.HiddenFor(x => x.EmailSubject)
            <div class="col-sm-12 px-2">
                <button type="button" name="Submit" value="Submit" class="mt-btn mt-btn-form" onclick="SubmitButtonClicked();">Submit</button>
            </div>
        }
        else
        {
            <div class="col-sm-12 px-2">
                <div class="text-center">
                    <p>Thanks for your enquiry, one of our team members will contact you shortly.</p>
                </div>
            </div>
        }
    </div>
}

<script>
    var SubmitButtonClicked = function () {
        console.log("SubmitButtonClicked");
        var isSubmitOk = true;
        //Check for ReCaptcha
        if ($(".g-recaptcha").length) {
            console.log($(".g-recaptcha").length);
            if ($("#recaptchaCode").val().length > 0) {
                isSubmitOk = true;
            }
            else {
                jQuery('#lblMessage').html("Please check ReCaptcha");
                isSubmitOk = false;
            }
        }
        console.log("isSubmitOk: " + isSubmitOk);
        if (isSubmitOk) {
            $("form#contactform").submit();
        }

    }
</script>
]]>
    </View>
  </PartialViews>
  <Macros>
    <macro>
      <name>ContactFormWrapper</name>
      <key>418a45f2-f640-4160-bfbe-553d167ee553</key>
      <alias>ContactFormWrapper</alias>
      <macroSource>~/Views/MacroPartials/ContactFormWrapper.cshtml</macroSource>
      <useInEditor>True</useInEditor>
      <dontRender>False</dontRender>
      <refreshRate>0</refreshRate>
      <cacheByMember>False</cacheByMember>
      <cacheByPage>False</cacheByPage>
      <properties>
        <property key="919be940-2477-42c4-b2b1-776400e79470" name="Email Subject" alias="emailSubject" sortOrder="1" propertyType="Umbraco.TextBox" />
        <property key="11a6629a-e160-4e78-a227-8dff63a8fcfc" name="Email To Address" alias="emailToAddress" sortOrder="0" propertyType="Umbraco.TextBox" />
      </properties>
    </macro>
  </Macros>
  <MacroPartialViews>
    <View path="ContactFormWrapper.cshtml">
      <![CDATA[@inherits Umbraco.Cms.Web.Common.Macros.PartialViewMacroPage
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;

@{
    string emailToAddress = Model.MacroParameters["emailToAddress"] != null ? (string)Model.MacroParameters["emailToAddress"] : "";
    var emailSubject = Model.MacroParameters["emailSubject"] != null ? (string)Model.MacroParameters["emailSubject"] : "";

}

@if (string.IsNullOrEmpty(emailToAddress) || string.IsNullOrEmpty(emailSubject))
{
    <p class="alert-error">Please setup email address and/or email subject</p>
}
else
{
    await Html.RenderPartialAsync("~/Views/Partials/ContactForm/Index.cshtml", new Miflun.SimpleContactForm.Models.ContactFormModel() {
                EmailToAddress = emailToAddress,
                EmailSubject = emailSubject,
                Email = string.Empty,
                Message = string.Empty,
                Name = string.Empty});
}]]>
    </View>
  </MacroPartialViews>
  <DictionaryItems />
  <Languages />
  <DataTypes />
  <MediaItems />
</umbPackage>